Week 8 Assignment
Name: Eric Flores

1. Write the interface (.h file) of a class Counter containing:

An instance variable counter of type int, initialized to 0.
A function called increment that adds one to the instance variable counter. It does not accept parameters or return a value.
A function called getValue that doesn't accept any parameters. It returns the value of the instance variable counter.
A default constructor.

    Answer: class Counter{
                private:
                int counter = 0;

                public:
                void increment(){
                counter++;
                }

                public:

                int getValue(){
                return counter;
                }
                };





2.  Write the interface (.h file) of a class Counter containing:

A data member counter of type int.
A data member named limit of type int.
A constructor that takes two int arguments.
A function called increment that accepts no parameters and returns no value.
A function called decrement that accepts no parameters and returns no value.
A function called getValue that accepts no parameters and returns an int.

    Answer:
            class Counter
                    {
                    private:
                    int counter;
                    int limit;
                    static int nCounters;

                    public:
                    Counter(int, int);
                    void increment();
                    void decrement();
                    int getValue();
                    static int getNCounters();
                    };





3. Write the interface (.h file) of a class GasTank containing:

An data member named amount of type double.
A constructor that accepts no parameters.
A function named addGas that accepts a parameter of type double and returns no value.
A function named useGas that accepts a parameter of type double and returns no value.
A function named getGasLevel that accepts no parameters and returns double.

    Answer:
            class GasTank
                {
                private:
                double amount;

                public:
                GasTank();
                void addGas(double);
                void useGas(double);
                double getGasLevel();
                };








4. Write the implementation (.cpp file) of the GasTank class of the previous exercise. The full specification of the class is:

A data member named amount of type double.
A constructor that no parameters. The constructor initializes the data member amount to 0.
A function named addGas that accepts a parameter of type double. The value of the amount instance variable is increased by the value of the parameter.
A function named useGas that accepts a parameter of type double. The value of the amount data member is decreased by the value of the parameter.
A function named getGasLevel that accepts no parameters. getGasLevel returns the value of the amount data member.


    Answer:
            GasTank::GasTank() :amount(0)
                    {
                    }

                    void GasTank::addGas(double b)
                    {
                    amount +=b;
                    }
                    void GasTank::useGas (double c)
                    {
                    amount-=c;
                    if ( amount<0) amount=0;
                    }
                    double GasTank::getGasLevel()
                    {
                    return amount;
                    }