Week 4 Chapter 10 Assignment
Name: Eric Flores
Directions:
Answer the following with C++ code.  You do not need to compile however you should test the code to make sure there are no syntax errors. 

3.	Write a full class definition for a class named Counter, and containing the following members:
•	A data member counter of type int.
•	A constructor that accepts no arguments and initializes the counter data member to 0.
•	A function called increment that accepts no parameters and returns no value. increment adds one to the counter data member.
•	A function called getValue that accepts no parameters. It returns the value of the instance variable counter.

    Answer:
                class Counter{
                        int counter;

                        public:
                        Counter(){
                        counter=0;
                        };

                        void increment(void);
                        int getValue(void);
                        };

                        void Counter::increment(){counter++;}
                        int Counter::getValue(){return counter;}



4.	Write a full class definition for a class named Averager, and containing the following members:
•	An data member named sum of type integer.
•	An data member named count of type integer.
•	A constructor with no parameters. The constructor initializes the data members sum and the data member count to 0.
•	A function named getSum that accepts no parameters and returns an integer. getSum returns the value of sum.
•	A function named add that accepts an integer parameter and returns no value. add increases the value of sum by the value of the parameter, and increments the value of count by one.
•	A function named getCount that accepts no parameters and returns an integer. getCount returns the value of the count data member, that is, the number of values added to sum.
•	A function named getAverage that accepts no parameters and returns a double. getAverage returns the average of the values added to sum. 
    The value returned should be a value of type double (and therefore you must cast the data members to double prior to performing the division).


    Answer: 
                #ifndef AVERAGER

                #define AVERAGER

                class Averager{

                    public:
                    int sum;
                    int count;

                    Averager(){
                    sum = 0;
                    count = 0;
                    }

                    int getSum(){
                    return sum;
                    }

                    void add(int n){
                    sum += n;
                    count++;
                    }6
                    int getCount(){
                    return count;
                    }

                    double getAverage(){
                    return (double)sum/count;
                    }

                    };

                #endif